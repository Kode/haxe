- name: Install dependencies
  run: |
    set -ex
    sudo add-apt-repository ppa:avsm/ppa -y # provides OPAM 2
    sudo add-apt-repository ppa:haxe/ocaml -y # provides newer version of mbedtls
    sudo apt-get update -qqy
    sudo apt-get install -qqy ocaml-nox camlp5 opam libpcre3-dev zlib1g-dev libgtk2.0-dev libmbedtls-dev ninja-build libstring-shellquote-perl

- name: Install OCaml libraries
  run: |
    set -ex
    opam init # --disable-sandboxing
    opam update
    opam pin add haxe . --no-action
    opam install haxe --deps-only --assume-depexts
    opam list
    ocamlopt -v

- name: Set ADD_REVISION=1 for non-release
  if: ${{ !startsWith(github.ref, 'refs/tags/') }}
  run: echo "ADD_REVISION=1" >> $GITHUB_ENV

- name: Build Haxe
  run: |
    set -ex
    eval $(opam env)
    opam config exec -- make -s -j`nproc` STATICLINK=1 haxe
    ldd -v ./haxe

- name: Get KhaTools_linux_x64
  run: git clone https://github.com/Kode/KhaTools_linux_x64.git
- name: Copy binary
  run: cp ./haxe KhaTools_linux_x64/haxe
- name: Remove old std
  run: rm -r KhaTools_linux_x64/std
- name: Copy new std
  run: cp -R std KhaTools_linux_x64/std
- name: Set name
  run: git config --global user.name "Robbot"
- name: Set email
  run: git config --global user.email "robbot2019@robdangero.us"
- name: Add everything
  run: git -C KhaTools_linux_x64 add .
- name: Commit binary
  id: commit
  continue-on-error: true
  run: git -C KhaTools_linux_x64 commit -a -m "Update Haxe binary to $GITHUB_SHA."
- name: Tag binary
  if: steps.commit.outcome == 'success'
  run: git -C KhaTools_linux_x64 tag haxe_$GITHUB_SHA
- name: Push binary
  id: push1
  if: steps.commit.outcome == 'success'
  continue-on-error: true
  run: git -C KhaTools_linux_x64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_linux_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
- name: Pull
  if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
  run: git -C KhaTools_linux_x64 pull --no-rebase
- name: Push binary again
  if: steps.commit.outcome == 'success' && steps.push1.outcome != 'success'
  continue-on-error: true
  run: git -C KhaTools_linux_x64 push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_linux_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
