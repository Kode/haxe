- name: Install dependencies
  env:
    # For compatibility with macOS 10.13
    ZLIB_VERSION: 1.3.1
    MBEDTLS_VERSION: 2.28.5
    PCRE2_VERSION: 10.42
  run: |
    set -ex
    brew update
    brew bundle --file=tests/Brewfile --no-upgrade
    cpanm IPC::System::Simple
    cpanm String::ShellQuote
    curl -L https://github.com/madler/zlib/releases/download/v$ZLIB_VERSION/zlib-$ZLIB_VERSION.tar.gz | tar xz
    cd zlib-$ZLIB_VERSION
    ./configure
    sudo make && sudo make install
    cd ..
    curl -L https://github.com/ARMmbed/mbedtls/archive/v$MBEDTLS_VERSION.tar.gz | tar xz
    cd mbedtls-$MBEDTLS_VERSION
    sudo make && sudo make install
    cd ..
    curl -L https://github.com/PCRE2Project/pcre2/releases/download/pcre2-$PCRE2_VERSION/pcre2-$PCRE2_VERSION.tar.gz | tar xz
    cd pcre2-$PCRE2_VERSION
    ./configure --enable-unicode --enable-pcre2-8 --enable-pcre2-16 --enable-pcre2-32 --enable-unicode-properties --enable-pcre2grep-libz --enable-pcre2grep-libbz2 --enable-jit
    sudo make && sudo make install
    cd ..

- name: Install OCaml libraries
  if: steps.cache-opam.outputs.cache-hit != 'true'
  run: |
    set -ex
    opam init # --disable-sandboxing
    opam update
    opam switch create ${{env.OCAML_VERSION}}
    eval $(opam env)
    opam env
    opam pin add ctypes ${{env.CTYPES}} --yes
    opam pin add haxe . --no-action
    opam install haxe --deps-only --assume-depexts
    opam list
    ocamlopt -v

- name: Set ADD_REVISION=1 for non-release
  if: ${{ !startsWith(github.ref, 'refs/tags/') }}
  run: echo "ADD_REVISION=1" >> $GITHUB_ENV

- name: Build Haxe
  run: |
    set -ex
    eval $(opam env)
    opam config exec -- make -s -j`sysctl -n hw.ncpu` STATICLINK=1 "LIB_PARAMS=/usr/local/lib/libz.a /usr/local/lib/libpcre2-8.a /usr/local/lib/libmbedtls.a /usr/local/lib/libmbedcrypto.a /usr/local/lib/libmbedx509.a -cclib '-framework Security -framework CoreFoundation'" haxe
    otool -L ./haxe

- name: Get KhaTools_macos_x64
  if: runner.arch == 'X64'
  run: git clone https://github.com/Kode/KhaTools_macos_x64.git KhaTools_macos
- name: Get KhaTools_macos_arm64
  if: runner.arch == 'ARM64'
  run: git clone https://github.com/Kode/KhaTools_macos_arm64.git KhaTools_macos
- name: Copy binary
  run: cp ./haxe KhaTools_macos/haxe
- name: Remove old std
  run: rm -r KhaTools_macos/std
- name: Copy new std
  run: cp -R std KhaTools_macos/std
- name: Set name
  run: git config --global user.name "Robbot"
- name: Set email
  run: git config --global user.email "robbot2019@robdangero.us"
- name: Add everything
  run: git -C KhaTools_macos add .
- name: Commit binary
  id: commit
  continue-on-error: true
  run: git -C KhaTools_macos commit -a -m "Update Haxe binary to $GITHUB_SHA."
- name: Tag binary
  id: tag
  continue-on-error: true
  if: steps.commit.outcome == 'success'
  run: git -C KhaTools_macos tag haxe_$GITHUB_SHA
- name: Push x64 binary
  id: push_x64
  if: runner.arch == 'X64' && steps.commit.outcome == 'success' && steps.tag.outcome == 'success'
  continue-on-error: true
  run: git -C KhaTools_macos push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_macos_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
- name: Push arm64 binary
  id: push_arm64
  if: runner.arch == 'ARM64' && steps.commit.outcome == 'success' && steps.tag.outcome == 'success'
  continue-on-error: true
  run: git -C KhaTools_macos push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_macos_arm64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
- name: Pull x64
  if: steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push_x64.outcome != 'success'
  run: git -C KhaTools_macos pull --no-rebase
- name: Pull arm64
  if: steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push_arm64.outcome != 'success'
  run: git -C KhaTools_macos pull --no-rebase
- name: Push x64 binary again
  if: runner.arch == 'X64' && steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push_x64.outcome != 'success'
  continue-on-error: true
  run: git -C KhaTools_macos push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_macos_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
- name: Push arm64 binary again
  if: runner.arch == 'ARM64' && steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push_arm64.outcome != 'success'
  continue-on-error: true
  run: git -C KhaTools_macos push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/KhaTools_macos_arm64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
