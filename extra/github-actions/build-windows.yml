- name: Expose mingw dll files
  shell: pwsh
  run: Write-Host "::add-path::${env:CYG_ROOT}/usr/$($env:MINGW_ARCH)-w64-mingw32/sys-root/mingw/bin"

# required to be able to retrieve the revision
- name: Mark directory as safe
  shell: pwsh
  run: |
    Set-PSDebug -Trace 1
    & "$($env:CYG_ROOT)/bin/bash.exe" @('-lc', 'git config --global --add safe.directory "$OLDPWD"')

- name: Set ADD_REVISION=1 for non-release
  if: ${{ !startsWith(github.ref, 'refs/tags/') }}
  shell: pwsh
  run: echo "ADD_REVISION=1" >> $Env:GITHUB_ENV

- name: Build Haxe
  shell: pwsh
  run: |
    Set-PSDebug -Trace 1
    git config --global --add safe.directory /cygdrive/d/a/haxe/haxe
    & "$($env:CYG_ROOT)/bin/bash.exe" @('-lc', 'cd "$OLDPWD" && opam config exec -- make -s -f Makefile.win -j`nproc` haxe 2>&1')
    & "$($env:CYG_ROOT)/bin/bash.exe" @('-lc', 'cd "$OLDPWD" && cygcheck ./haxe.exe')

- name: Get KhaTools_windows_x64
  run: git clone https://github.com/Kode/KhaTools_windows_x64.git
- name: Copy binary
  run: copy haxe.exe KhaTools_windows_x64\haxe.exe
- name: Copy new std
  continue-on-error: true
  run: robocopy std KhaTools_windows_x64\std /mir
- name: Set name
  run: git config --global user.name "Robbot"
- name: Set email
  run: git config --global user.email "robbot2019@robdangero.us"
- name: Add everything
  run: git -C KhaTools_windows_x64 add .
- name: Commit binary
  id: commit
  continue-on-error: true
  run: git -C KhaTools_windows_x64 commit -a -m "Update Haxe binary to ${env:GITHUB_SHA}."
- name: Tag binary
  id: tag
  continue-on-error: true
  if: steps.commit.outcome == 'success'
  run: git -C KhaTools_windows_x64 tag haxe_${env:GITHUB_SHA}
- name: Push binary
  id: push1
  if: steps.commit.outcome == 'success' && steps.tag.outcome == 'success'
  continue-on-error: true
  run: git -C KhaTools_windows_x64 push https://Kode-Robbot:${env:ROBBOT_PASS}@github.com/Kode/KhaTools_windows_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
- name: Pull
  if: steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push1.outcome != 'success'
  run: git -C KhaTools_windows_x64 pull --no-rebase
- name: Push binary again
  if: steps.commit.outcome == 'success' && steps.tag.outcome == 'success' && steps.push1.outcome != 'success'
  continue-on-error: true
  run: git -C KhaTools_windows_x64 push https://Kode-Robbot:${env:ROBBOT_PASS}@github.com/Kode/KhaTools_windows_x64.git main --tags
  env:
    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
